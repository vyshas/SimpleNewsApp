plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlinx-serialization'
}

def credentialsPropertiesFile = rootProject.file("credentials.properties")
def credentialProperties = new Properties()
credentialProperties.load(new FileInputStream(credentialsPropertiesFile))

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.vyshas.newsapp"
        minSdk 28
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        buildConfigField(
                "String",
                "NEWS_API_KEY",
                credentialProperties['NEWS_API_KEY']
        )
    }

    signingConfigs {
        debug {
            keyAlias "androiddebugkey"
            keyPassword "android"
            storeFile rootProject.file('debug.keystore')
            storePassword "android"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.5.15"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.vyshas.newsapp'
}


dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version"
    implementation("org.jetbrains.kotlinx:kotlinx-datetime:$kotlinx_datetime_version")

    implementation 'androidx.core:core-ktx:1.16.0'
    implementation "androidx.appcompat:appcompat:$appcompat_version"

    // Architecture
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.9.0'

    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    implementation "com.squareup.moshi:moshi-adapters:$moshi_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    //compose
    def composeBom = platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation composeBom

    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.compose.material:material'
    implementation 'androidx.compose.foundation:foundation'
    implementation 'androidx.compose.material3:material3-window-size-class'

    implementation "androidx.activity:activity-compose:$compose_activity_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$compose_viewmodel_version"

    implementation 'androidx.compose.animation:animation'
    implementation 'androidx.compose.runtime:runtime'

    implementation "androidx.paging:paging-compose:$compose_paging_version"

    implementation "com.google.accompanist:accompanist-appcompat-theme:$accompanist_version"
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanist_version"
    implementation("io.coil-kt:coil-compose:$coil_version")

    implementation "androidx.browser:browser:$browser_version"

    //debugging
    implementation "com.jakewharton.timber:timber:$timber_version"

    //testing
    androidTestImplementation composeBom
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    testImplementation "app.cash.turbine:turbine:$turbine_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_android_version"
}